

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Sep 18 12:36:02 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F46K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000452                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _Seg7
    72  000452  C0                 	db	192
    73  000453  F9                 	db	249
    74  000454  A4                 	db	164
    75  000455  B0                 	db	176
    76  000456  99                 	db	153
    77  000457  92                 	db	146
    78  000458  82                 	db	130
    79  000459  F8                 	db	248
    80  00045A  80                 	db	128
    81  00045B  90                 	db	144
    82                           
    83                           ;initializer for _show
    84  00045C  08                 	db	8
    85  00045D  04                 	db	4
    86  00045E  02                 	db	2
    87  00045F  01                 	db	1
    88                           
    89                           	psect	nvCOMRAM
    90  00003F                     __pnvCOMRAM:
    91                           	opt stack 0
    92  00003F                     _TMR0_InterruptHandler:
    93                           	opt stack 0
    94  00003F                     	ds	2
    95  000041                     _timer0ReloadVal:
    96                           	opt stack 0
    97  000041                     	ds	1
    98  0000                     _ANSELA	set	3896
    99  0000                     _ANSELE	set	3900
   100  0000                     _ANSELB	set	3897
   101  0000                     _ANSELC	set	3898
   102  0000                     _ANSELD	set	3899
   103  0000                     _INTCON2bits	set	4081
   104  0000                     _WPUB	set	3937
   105  0000                     _TRISD	set	3989
   106  0000                     _TRISC	set	3988
   107  0000                     _TRISB	set	3987
   108  0000                     _TRISA	set	3986
   109  0000                     _TRISE	set	3990
   110  0000                     _LATC	set	3979
   111  0000                     _LATB	set	3978
   112  0000                     _LATA	set	3977
   113  0000                     _LATD	set	3980
   114  0000                     _LATE	set	3981
   115  0000                     _OSCTUNE	set	3995
   116  0000                     _OSCCON2	set	4050
   117  0000                     _OSCCON	set	4051
   118  0000                     _RCONbits	set	4048
   119  0000                     _T0CONbits	set	4053
   120  0000                     _T0CON	set	4053
   121  0000                     _INTCONbits	set	4082
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR0H	set	4055
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  000384                     __pcinit:
   129                           	opt stack 0
   130  000384                     start_initialization:
   131                           	opt stack 0
   132  000384                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (14 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137  000384  0E52               	movlw	low __pidataCOMRAM
   138  000386  6EF6               	movwf	tblptrl,c
   139  000388  0E04               	movlw	high __pidataCOMRAM
   140  00038A  6EF7               	movwf	tblptrh,c
   141  00038C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   142  00038E  6EF8               	movwf	tblptru,c
   143  000390  EE00  F031         	lfsr	0,__pdataCOMRAM
   144  000394  EE10 F00E          	lfsr	1,14
   145  000398                     copy_data0:
   146  000398  0009               	tblrd		*+
   147  00039A  CFF5 FFEE          	movff	tablat,postinc0
   148  00039E  50E5               	movf	postdec1,w,c
   149  0003A0  50E1               	movf	fsr1l,w,c
   150  0003A2  E1FA               	bnz	copy_data0
   151                           
   152                           ; Clear objects allocated to COMRAM (16 bytes)
   153  0003A4  EE00  F021         	lfsr	0,__pbssCOMRAM
   154  0003A8  0E10               	movlw	16
   155  0003AA                     clear_0:
   156  0003AA  6AEE               	clrf	postinc0,c
   157  0003AC  06E8               	decf	wreg,f,c
   158  0003AE  E1FD               	bnz	clear_0
   159  0003B0                     end_of_initialization:
   160                           	opt stack 0
   161  0003B0                     __end_of__initialization:
   162                           	opt stack 0
   163  0003B0  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   164  0003B2  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   165  0003B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166  0003B6  6EF8               	movwf	tblptru,c
   167  0003B8  0100               	movlb	0
   168  0003BA  EF30  F002         	goto	_main	;jump to C main() function
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	bssCOMRAM
   179  000021                     __pbssCOMRAM:
   180                           	opt stack 0
   181  000021                     _seg_display:
   182                           	opt stack 0
   183  000021                     	ds	4
   184  000025                     _ShowSeg7:
   185                           	opt stack 0
   186  000025                     	ds	4
   187  000029                     _k:
   188                           	opt stack 0
   189  000029                     	ds	2
   190  00002B                     _i:
   191                           	opt stack 0
   192  00002B                     	ds	2
   193  00002D                     _num:
   194                           	opt stack 0
   195  00002D                     	ds	1
   196  00002E                     _j:
   197                           	opt stack 0
   198  00002E                     	ds	1
   199  00002F                     _delay_cnt:
   200                           	opt stack 0
   201  00002F                     	ds	1
   202  000030                     _scan_cnt:
   203                           	opt stack 0
   204  000030                     	ds	1
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	dataCOMRAM
   215  000031                     __pdataCOMRAM:
   216                           	opt stack 0
   217  000031                     _Seg7:
   218                           	opt stack 0
   219  000031                     	ds	10
   220  00003B                     _show:
   221                           	opt stack 0
   222  00003B                     	ds	4
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           postdec1	equ	0xFE5
   230                           fsr1l	equ	0xFE1
   231                           
   232                           	psect	cstackCOMRAM
   233  000001                     __pcstackCOMRAM:
   234                           	opt stack 0
   235  000001                     ??_INTERRUPT_InterruptManager:
   236  000001                     
   237                           ; 1 bytes @ 0x0
   238  000001                     	ds	18
   239  000013                     ?___wmul:
   240                           	opt stack 0
   241  000013                     ?___awmod:
   242                           	opt stack 0
   243  000013                     Delay1KTCYx@unit:
   244                           	opt stack 0
   245  000013                     TMR0_SetInterruptHandler@InterruptHandler:
   246                           	opt stack 0
   247  000013                     ___wmul@multiplier:
   248                           	opt stack 0
   249  000013                     ___awmod@dividend:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x12
   253  000013                     	ds	1
   254  000014                     display_7seg@num:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x13
   258  000014                     	ds	1
   259  000015                     ___wmul@multiplicand:
   260                           	opt stack 0
   261  000015                     ___awmod@divisor:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x14
   265  000015                     	ds	2
   266  000017                     ___awmod@counter:
   267                           	opt stack 0
   268  000017                     ___wmul@product:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0x16
   272  000017                     	ds	1
   273  000018                     ___awmod@sign:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x17
   277  000018                     	ds	1
   278  000019                     ?___awdiv:
   279                           	opt stack 0
   280  000019                     ___awdiv@dividend:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x18
   284  000019                     	ds	2
   285  00001B                     ___awdiv@divisor:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x1A
   289  00001B                     	ds	2
   290  00001D                     ___awdiv@counter:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x1C
   294  00001D                     	ds	1
   295  00001E                     ___awdiv@sign:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x1D
   299  00001E                     	ds	1
   300  00001F                     ___awdiv@quotient:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x1E
   304  00001F                     	ds	2
   305  000021                     tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           ; 1 bytes @ 0x20
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 66 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels required when called:    6
   340 ;; This function calls:
   341 ;;		_SYSTEM_Initialize
   342 ;;		_calculate_output
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text0
   349  000460                     __ptext0:
   350                           	opt stack 0
   351  000460                     _main:
   352                           	opt stack 25
   353                           
   354                           ;main.c: 69: SYSTEM_Initialize();
   355                           
   356                           ;incstack = 0
   357  000460  EC18  F002         	call	_SYSTEM_Initialize	;wreg free
   358                           
   359                           ;main.c: 72: (INTCONbits.GIE = 1);
   360  000464  8EF2               	bsf	intcon,7,c	;volatile
   361                           
   362                           ;main.c: 73: (INTCONbits.PEIE = 1);
   363  000466  8CF2               	bsf	intcon,6,c	;volatile
   364  000468                     
   365                           ;main.c: 76: {
   366                           ;main.c: 77: calculate_output();
   367  000468  EC56  F000         	call	_calculate_output	;wreg free
   368  00046C  D7FD               	goto	l145
   369  00046E                     __end_of_main:
   370                           	opt stack 0
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           intcon	equ	0xFF2
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381 ;; *************** function _calculate_output *****************
   382 ;; Defined at:
   383 ;;		line 61 in file "seg_display.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    5
   404 ;; This function calls:
   405 ;;		___awdiv
   406 ;;		___awmod
   407 ;;		___wmul
   408 ;;		_display_7seg
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text1
   415  0000AC                     __ptext1:
   416                           	opt stack 0
   417  0000AC                     _calculate_output:
   418                           	opt stack 25
   419                           
   420                           ;seg_display.c: 64: seg_display[0]=k/1000;
   421                           
   422                           ;incstack = 0
   423  0000AC  C029  F019         	movff	_k,___awdiv@dividend
   424  0000B0  C02A  F01A         	movff	_k+1,___awdiv@dividend+1
   425  0000B4  0E03               	movlw	3
   426  0000B6  6E1C               	movwf	___awdiv@divisor+1,c
   427  0000B8  0EE8               	movlw	232
   428  0000BA  6E1B               	movwf	___awdiv@divisor,c
   429  0000BC  EC28  F001         	call	___awdiv	;wreg free
   430  0000C0  5019               	movf	?___awdiv,w,c
   431  0000C2  6E21               	movwf	_seg_display,c
   432                           
   433                           ;seg_display.c: 65: seg_display[1]=(k-seg_display[0]*1000)/100;
   434  0000C4  C021  F013         	movff	_seg_display,___wmul@multiplier
   435  0000C8  6A14               	clrf	___wmul@multiplier+1,c
   436  0000CA  0E03               	movlw	3
   437  0000CC  6E16               	movwf	___wmul@multiplicand+1,c
   438  0000CE  0EE8               	movlw	232
   439  0000D0  6E15               	movwf	___wmul@multiplicand,c
   440  0000D2  ECF4  F001         	call	___wmul	;wreg free
   441  0000D6  1E13               	comf	?___wmul,f,c
   442  0000D8  1E14               	comf	?___wmul+1,f,c
   443  0000DA  4A13               	infsnz	?___wmul,f,c
   444  0000DC  2A14               	incf	?___wmul+1,f,c
   445  0000DE  5029               	movf	_k,w,c
   446  0000E0  2413               	addwf	?___wmul,w,c
   447  0000E2  6E19               	movwf	___awdiv@dividend,c
   448  0000E4  502A               	movf	_k+1,w,c
   449  0000E6  2014               	addwfc	?___wmul+1,w,c
   450  0000E8  6E1A               	movwf	___awdiv@dividend+1,c
   451  0000EA  0E00               	movlw	0
   452  0000EC  6E1C               	movwf	___awdiv@divisor+1,c
   453  0000EE  0E64               	movlw	100
   454  0000F0  6E1B               	movwf	___awdiv@divisor,c
   455  0000F2  EC28  F001         	call	___awdiv	;wreg free
   456  0000F6  5019               	movf	?___awdiv,w,c
   457  0000F8  6E22               	movwf	_seg_display+1,c
   458                           
   459                           ;seg_display.c: 66: seg_display[2]=(k-seg_display[0]*1000-seg_display[1]*100)/10;
   460  0000FA  C021  F013         	movff	_seg_display,___wmul@multiplier
   461  0000FE  6A14               	clrf	___wmul@multiplier+1,c
   462  000100  0E03               	movlw	3
   463  000102  6E16               	movwf	___wmul@multiplicand+1,c
   464  000104  0EE8               	movlw	232
   465  000106  6E15               	movwf	___wmul@multiplicand,c
   466  000108  ECF4  F001         	call	___wmul	;wreg free
   467  00010C  5022               	movf	_seg_display+1,w,c
   468  00010E  0D64               	mullw	100
   469  000110  50F3               	movf	prodl,w,c
   470  000112  2613               	addwf	?___wmul,f,c
   471  000114  50F4               	movf	prodh,w,c
   472  000116  2214               	addwfc	?___wmul+1,f,c
   473  000118  1E13               	comf	?___wmul,f,c
   474  00011A  1E14               	comf	?___wmul+1,f,c
   475  00011C  4A13               	infsnz	?___wmul,f,c
   476  00011E  2A14               	incf	?___wmul+1,f,c
   477  000120  5029               	movf	_k,w,c
   478  000122  2413               	addwf	?___wmul,w,c
   479  000124  6E19               	movwf	___awdiv@dividend,c
   480  000126  502A               	movf	_k+1,w,c
   481  000128  2014               	addwfc	?___wmul+1,w,c
   482  00012A  6E1A               	movwf	___awdiv@dividend+1,c
   483  00012C  0E00               	movlw	0
   484  00012E  6E1C               	movwf	___awdiv@divisor+1,c
   485  000130  0E0A               	movlw	10
   486  000132  6E1B               	movwf	___awdiv@divisor,c
   487  000134  EC28  F001         	call	___awdiv	;wreg free
   488  000138  5019               	movf	?___awdiv,w,c
   489  00013A  6E23               	movwf	_seg_display+2,c
   490                           
   491                           ;seg_display.c: 67: seg_display[3]=k %10;
   492  00013C  C029  F013         	movff	_k,___awmod@dividend
   493  000140  C02A  F014         	movff	_k+1,___awmod@dividend+1
   494  000144  0E00               	movlw	0
   495  000146  6E16               	movwf	___awmod@divisor+1,c
   496  000148  0E0A               	movlw	10
   497  00014A  6E15               	movwf	___awmod@divisor,c
   498  00014C  EC6A  F001         	call	___awmod	;wreg free
   499  000150  5013               	movf	?___awmod,w,c
   500  000152  6E24               	movwf	_seg_display+3,c
   501                           
   502                           ;seg_display.c: 69: for(i=0;i<125;i++)
   503  000154  0E00               	movlw	0
   504  000156  6E2C               	movwf	_i+1,c
   505  000158  0E00               	movlw	0
   506  00015A  6E2B               	movwf	_i,c
   507  00015C                     l1160:
   508  00015C  BE2C               	btfsc	_i+1,7,c
   509  00015E  D006               	goto	l176
   510  000160  502C               	movf	_i+1,w,c
   511  000162  E10A               	bnz	l1170
   512  000164  0E7D               	movlw	125
   513  000166  5C2B               	subwf	_i,w,c
   514  000168  B0D8               	btfsc	status,0,c
   515  00016A  D006               	goto	u390
   516  00016C                     l176:
   517                           
   518                           ;seg_display.c: 70: {
   519                           ;seg_display.c: 71: display_7seg(num);
   520  00016C  502D               	movf	_num,w,c
   521  00016E  ECCB  F000         	call	_display_7seg
   522  000172  4A2B               	infsnz	_i,f,c
   523  000174  2A2C               	incf	_i+1,f,c
   524  000176  D7F2               	goto	l1160
   525  000178                     u390:
   526  000178                     l1170:
   527                           
   528                           ;seg_display.c: 72: }
   529                           ;seg_display.c: 74: k++;
   530  000178  4A29               	infsnz	_k,f,c
   531  00017A  2A2A               	incf	_k+1,f,c
   532                           
   533                           ;seg_display.c: 75: if(k>9999)
   534  00017C  BE2A               	btfsc	_k+1,7,c
   535  00017E  0012               	return	
   536  000180  0E10               	movlw	16
   537  000182  5C29               	subwf	_k,w,c
   538  000184  0E27               	movlw	39
   539  000186  582A               	subwfb	_k+1,w,c
   540  000188  A0D8               	btfss	status,0,c
   541  00018A  0012               	return	
   542                           
   543                           ;seg_display.c: 76: {
   544                           ;seg_display.c: 77: k=0;
   545  00018C  0E00               	movlw	0
   546  00018E  6E2A               	movwf	_k+1,c
   547  000190  0E00               	movlw	0
   548  000192  6E29               	movwf	_k,c
   549  000194  0012               	return	
   550  000196                     __end_of_calculate_output:
   551                           	opt stack 0
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           prodh	equ	0xFF4
   557                           prodl	equ	0xFF3
   558                           intcon	equ	0xFF2
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           postdec1	equ	0xFE5
   562                           fsr1l	equ	0xFE1
   563                           status	equ	0xFD8
   564                           
   565 ;; *************** function _display_7seg *****************
   566 ;; Defined at:
   567 ;;		line 20 in file "seg_display.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  num             1    wreg     unsigned char 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  num             1   19[COMRAM] unsigned char 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;Total ram usage:        1 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    4
   588 ;; This function calls:
   589 ;;		_Delay1KTCYx
   590 ;; This function is called by:
   591 ;;		_calculate_output
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text2
   596  000196                     __ptext2:
   597                           	opt stack 0
   598  000196                     _display_7seg:
   599                           	opt stack 25
   600                           
   601                           ;incstack = 0
   602                           ;display_7seg@num stored from wreg
   603  000196  6E14               	movwf	display_7seg@num,c
   604                           
   605                           ;seg_display.c: 22: if (num==0)
   606  000198  5014               	movf	display_7seg@num,w,c
   607  00019A  A4D8               	btfss	status,2,c
   608  00019C  D013               	goto	l169
   609                           
   610                           ;seg_display.c: 23: {
   611                           ;seg_display.c: 24: LATA=0xff;
   612  00019E  6889               	setf	3977,c	;volatile
   613                           
   614                           ;seg_display.c: 25: LATB=0x00;
   615  0001A0  0E00               	movlw	0
   616  0001A2  6E8A               	movwf	3978,c	;volatile
   617                           
   618                           ;seg_display.c: 26: LATB=0x08;
   619  0001A4  0E08               	movlw	8
   620  0001A6  6E8A               	movwf	3978,c	;volatile
   621                           
   622                           ;seg_display.c: 27: LATA=Seg7[seg_display[0]];
   623  0001A8  5021               	movf	_seg_display,w,c
   624  0001AA  0D01               	mullw	1
   625  0001AC  0E31               	movlw	low _Seg7
   626  0001AE  24F3               	addwf	prodl,w,c
   627  0001B0  6ED9               	movwf	fsr2l,c
   628  0001B2  0E00               	movlw	high _Seg7
   629  0001B4  20F4               	addwfc	prodh,w,c
   630  0001B6  6EDA               	movwf	fsr2h,c
   631  0001B8  50DF               	movf	indf2,w,c
   632  0001BA  6E89               	movwf	3977,c	;volatile
   633                           
   634                           ;seg_display.c: 28: Delay1KTCYx(1);
   635  0001BC  0E01               	movlw	1
   636  0001BE  EC21  F002         	call	_Delay1KTCYx
   637                           
   638                           ;seg_display.c: 29: num++;
   639  0001C2  2A14               	incf	display_7seg@num,f,c
   640  0001C4                     l169:
   641                           
   642                           ;seg_display.c: 30: }
   643                           ;seg_display.c: 31: if (num==1)
   644  0001C4  0414               	decf	display_7seg@num,w,c
   645  0001C6  A4D8               	btfss	status,2,c
   646  0001C8  D013               	goto	l170
   647                           
   648                           ;seg_display.c: 32: {
   649                           ;seg_display.c: 33: LATA=0xff;
   650  0001CA  6889               	setf	3977,c	;volatile
   651                           
   652                           ;seg_display.c: 34: LATB=0x00;
   653  0001CC  0E00               	movlw	0
   654  0001CE  6E8A               	movwf	3978,c	;volatile
   655                           
   656                           ;seg_display.c: 35: LATB=0x04;
   657  0001D0  0E04               	movlw	4
   658  0001D2  6E8A               	movwf	3978,c	;volatile
   659                           
   660                           ;seg_display.c: 36: LATA=Seg7[seg_display[1]];
   661  0001D4  5022               	movf	_seg_display+1,w,c
   662  0001D6  0D01               	mullw	1
   663  0001D8  0E31               	movlw	low _Seg7
   664  0001DA  24F3               	addwf	prodl,w,c
   665  0001DC  6ED9               	movwf	fsr2l,c
   666  0001DE  0E00               	movlw	high _Seg7
   667  0001E0  20F4               	addwfc	prodh,w,c
   668  0001E2  6EDA               	movwf	fsr2h,c
   669  0001E4  50DF               	movf	indf2,w,c
   670  0001E6  6E89               	movwf	3977,c	;volatile
   671                           
   672                           ;seg_display.c: 37: Delay1KTCYx(1);
   673  0001E8  0E01               	movlw	1
   674  0001EA  EC21  F002         	call	_Delay1KTCYx
   675                           
   676                           ;seg_display.c: 38: num++;
   677  0001EE  2A14               	incf	display_7seg@num,f,c
   678  0001F0                     l170:
   679                           
   680                           ;seg_display.c: 39: }
   681                           ;seg_display.c: 40: if (num==2)
   682  0001F0  0E02               	movlw	2
   683  0001F2  1814               	xorwf	display_7seg@num,w,c
   684  0001F4  A4D8               	btfss	status,2,c
   685  0001F6  D013               	goto	l171
   686                           
   687                           ;seg_display.c: 41: {
   688                           ;seg_display.c: 42: LATA=0xff;
   689  0001F8  6889               	setf	3977,c	;volatile
   690                           
   691                           ;seg_display.c: 43: LATB=0x00;
   692  0001FA  0E00               	movlw	0
   693  0001FC  6E8A               	movwf	3978,c	;volatile
   694                           
   695                           ;seg_display.c: 44: LATB=0x02;
   696  0001FE  0E02               	movlw	2
   697  000200  6E8A               	movwf	3978,c	;volatile
   698                           
   699                           ;seg_display.c: 45: LATA=Seg7[seg_display[2]];
   700  000202  5023               	movf	_seg_display+2,w,c
   701  000204  0D01               	mullw	1
   702  000206  0E31               	movlw	low _Seg7
   703  000208  24F3               	addwf	prodl,w,c
   704  00020A  6ED9               	movwf	fsr2l,c
   705  00020C  0E00               	movlw	high _Seg7
   706  00020E  20F4               	addwfc	prodh,w,c
   707  000210  6EDA               	movwf	fsr2h,c
   708  000212  50DF               	movf	indf2,w,c
   709  000214  6E89               	movwf	3977,c	;volatile
   710                           
   711                           ;seg_display.c: 46: Delay1KTCYx(1);
   712  000216  0E01               	movlw	1
   713  000218  EC21  F002         	call	_Delay1KTCYx
   714                           
   715                           ;seg_display.c: 47: num++;
   716  00021C  2A14               	incf	display_7seg@num,f,c
   717  00021E                     l171:
   718                           
   719                           ;seg_display.c: 48: }
   720                           ;seg_display.c: 49: if (num==3)
   721  00021E  0E03               	movlw	3
   722  000220  1814               	xorwf	display_7seg@num,w,c
   723  000222  A4D8               	btfss	status,2,c
   724  000224  0012               	return	
   725                           
   726                           ;seg_display.c: 50: {
   727                           ;seg_display.c: 51: LATA=0xff;
   728  000226  6889               	setf	3977,c	;volatile
   729                           
   730                           ;seg_display.c: 52: LATB=0x00;
   731  000228  0E00               	movlw	0
   732  00022A  6E8A               	movwf	3978,c	;volatile
   733                           
   734                           ;seg_display.c: 53: LATB=0x01;
   735  00022C  0E01               	movlw	1
   736  00022E  6E8A               	movwf	3978,c	;volatile
   737                           
   738                           ;seg_display.c: 54: LATA=Seg7[seg_display[3]];
   739  000230  5024               	movf	_seg_display+3,w,c
   740  000232  0D01               	mullw	1
   741  000234  0E31               	movlw	low _Seg7
   742  000236  24F3               	addwf	prodl,w,c
   743  000238  6ED9               	movwf	fsr2l,c
   744  00023A  0E00               	movlw	high _Seg7
   745  00023C  20F4               	addwfc	prodh,w,c
   746  00023E  6EDA               	movwf	fsr2h,c
   747  000240  50DF               	movf	indf2,w,c
   748  000242  6E89               	movwf	3977,c	;volatile
   749                           
   750                           ;seg_display.c: 55: Delay1KTCYx(1);
   751  000244  0E01               	movlw	1
   752  000246  EC21  F002         	call	_Delay1KTCYx
   753                           
   754                           ;seg_display.c: 56: num=0;
   755  00024A  0E00               	movlw	0
   756  00024C  6E14               	movwf	display_7seg@num,c
   757  00024E  0012               	return	
   758  000250                     __end_of_display_7seg:
   759                           	opt stack 0
   760                           tblptru	equ	0xFF8
   761                           tblptrh	equ	0xFF7
   762                           tblptrl	equ	0xFF6
   763                           tablat	equ	0xFF5
   764                           prodh	equ	0xFF4
   765                           prodl	equ	0xFF3
   766                           intcon	equ	0xFF2
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           indf2	equ	0xFDF
   772                           fsr2h	equ	0xFDA
   773                           fsr2l	equ	0xFD9
   774                           status	equ	0xFD8
   775                           
   776 ;; *************** function _Delay1KTCYx *****************
   777 ;; Defined at:
   778 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d1ktcyx.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  unit            1    wreg     unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  unit            1   18[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    3
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_display_7seg
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text3
   807  000442                     __ptext3:
   808                           	opt stack 0
   809  000442                     _Delay1KTCYx:
   810                           	opt stack 25
   811                           
   812                           ;incstack = 0
   813                           ;Delay1KTCYx@unit stored from wreg
   814  000442  6E13               	movwf	Delay1KTCYx@unit,c
   815  000444                     l381:
   816  000444  0EC8               	movlw	200
   817  000446                     u437:
   818  000446  D000               	nop2	
   819  000448  2EE8               	decfsz	wreg,f,c
   820  00044A  D7FD               	bra	u437
   821  00044C  2E13               	decfsz	Delay1KTCYx@unit,f,c
   822  00044E  D7FA               	goto	l381
   823  000450  0012               	return	
   824  000452                     __end_of_Delay1KTCYx:
   825                           	opt stack 0
   826                           tblptru	equ	0xFF8
   827                           tblptrh	equ	0xFF7
   828                           tblptrl	equ	0xFF6
   829                           tablat	equ	0xFF5
   830                           prodh	equ	0xFF4
   831                           prodl	equ	0xFF3
   832                           intcon	equ	0xFF2
   833                           postinc0	equ	0xFEE
   834                           wreg	equ	0xFE8
   835                           postdec1	equ	0xFE5
   836                           fsr1l	equ	0xFE1
   837                           indf2	equ	0xFDF
   838                           fsr2h	equ	0xFDA
   839                           fsr2l	equ	0xFD9
   840                           status	equ	0xFD8
   841                           
   842 ;; *************** function ___wmul *****************
   843 ;; Defined at:
   844 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  multiplier      2   18[COMRAM] unsigned int 
   847 ;;  multiplicand    2   20[COMRAM] unsigned int 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  product         2   22[COMRAM] unsigned int 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  2   18[COMRAM] unsigned int 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, prodl, prodh
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        6 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    3
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_calculate_output
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text4
   874  0003E8                     __ptext4:
   875                           	opt stack 0
   876  0003E8                     ___wmul:
   877                           	opt stack 26
   878                           
   879                           ;incstack = 0
   880  0003E8  5013               	movf	___wmul@multiplier,w,c
   881  0003EA  0215               	mulwf	___wmul@multiplicand,c
   882  0003EC  CFF3 F017          	movff	prodl,___wmul@product
   883  0003F0  CFF4 F018          	movff	prodh,___wmul@product+1
   884  0003F4  5013               	movf	___wmul@multiplier,w,c
   885  0003F6  0216               	mulwf	___wmul@multiplicand+1,c
   886  0003F8  50F3               	movf	prodl,w,c
   887  0003FA  2618               	addwf	___wmul@product+1,f,c
   888  0003FC  5014               	movf	___wmul@multiplier+1,w,c
   889  0003FE  0215               	mulwf	___wmul@multiplicand,c
   890  000400  50F3               	movf	prodl,w,c
   891  000402  2618               	addwf	___wmul@product+1,f,c
   892  000404  C017  F013         	movff	___wmul@product,?___wmul
   893  000408  C018  F014         	movff	___wmul@product+1,?___wmul+1
   894  00040C  0012               	return	
   895  00040E                     __end_of___wmul:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           prodh	equ	0xFF4
   902                           prodl	equ	0xFF3
   903                           intcon	equ	0xFF2
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           postdec1	equ	0xFE5
   907                           fsr1l	equ	0xFE1
   908                           indf2	equ	0xFDF
   909                           fsr2h	equ	0xFDA
   910                           fsr2l	equ	0xFD9
   911                           status	equ	0xFD8
   912                           
   913 ;; *************** function ___awmod *****************
   914 ;; Defined at:
   915 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  dividend        2   18[COMRAM] int 
   918 ;;  divisor         2   20[COMRAM] int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  sign            1   23[COMRAM] unsigned char 
   921 ;;  counter         1   22[COMRAM] unsigned char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  2   18[COMRAM] int 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;Total ram usage:        6 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    3
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_calculate_output
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text5
   946  0002D4                     __ptext5:
   947                           	opt stack 0
   948  0002D4                     ___awmod:
   949                           	opt stack 26
   950                           
   951                           ;incstack = 0
   952  0002D4  0E00               	movlw	0
   953  0002D6  6E18               	movwf	___awmod@sign,c
   954  0002D8  AE14               	btfss	___awmod@dividend+1,7,c
   955  0002DA  D006               	goto	l360
   956  0002DC  6C13               	negf	___awmod@dividend,c
   957  0002DE  1E14               	comf	___awmod@dividend+1,f,c
   958  0002E0  B0D8               	btfsc	status,0,c
   959  0002E2  2A14               	incf	___awmod@dividend+1,f,c
   960  0002E4  0E01               	movlw	1
   961  0002E6  6E18               	movwf	___awmod@sign,c
   962  0002E8                     l360:
   963  0002E8  AE16               	btfss	___awmod@divisor+1,7,c
   964  0002EA  D004               	goto	l361
   965  0002EC  6C15               	negf	___awmod@divisor,c
   966  0002EE  1E16               	comf	___awmod@divisor+1,f,c
   967  0002F0  B0D8               	btfsc	status,0,c
   968  0002F2  2A16               	incf	___awmod@divisor+1,f,c
   969  0002F4                     l361:
   970  0002F4  5015               	movf	___awmod@divisor,w,c
   971  0002F6  1016               	iorwf	___awmod@divisor+1,w,c
   972  0002F8  B4D8               	btfsc	status,2,c
   973  0002FA  D018               	goto	l368
   974  0002FC  0E01               	movlw	1
   975  0002FE  6E17               	movwf	___awmod@counter,c
   976  000300  D004               	goto	l363
   977  000302  90D8               	bcf	status,0,c
   978  000304  3615               	rlcf	___awmod@divisor,f,c
   979  000306  3616               	rlcf	___awmod@divisor+1,f,c
   980  000308  2A17               	incf	___awmod@counter,f,c
   981  00030A                     l363:
   982  00030A  AE16               	btfss	___awmod@divisor+1,7,c
   983  00030C  D7FA               	goto	l364
   984  00030E                     u330:
   985  00030E  5015               	movf	___awmod@divisor,w,c
   986  000310  5C13               	subwf	___awmod@dividend,w,c
   987  000312  5016               	movf	___awmod@divisor+1,w,c
   988  000314  5814               	subwfb	___awmod@dividend+1,w,c
   989  000316  A0D8               	btfss	status,0,c
   990  000318  D004               	goto	l367
   991  00031A  5015               	movf	___awmod@divisor,w,c
   992  00031C  5E13               	subwf	___awmod@dividend,f,c
   993  00031E  5016               	movf	___awmod@divisor+1,w,c
   994  000320  5A14               	subwfb	___awmod@dividend+1,f,c
   995  000322                     l367:
   996  000322  90D8               	bcf	status,0,c
   997  000324  3216               	rrcf	___awmod@divisor+1,f,c
   998  000326  3215               	rrcf	___awmod@divisor,f,c
   999  000328  2E17               	decfsz	___awmod@counter,f,c
  1000  00032A  D7F1               	goto	u330
  1001  00032C                     l368:
  1002  00032C  5018               	movf	___awmod@sign,w,c
  1003  00032E  B4D8               	btfsc	status,2,c
  1004  000330  D004               	goto	l369
  1005  000332  6C13               	negf	___awmod@dividend,c
  1006  000334  1E14               	comf	___awmod@dividend+1,f,c
  1007  000336  B0D8               	btfsc	status,0,c
  1008  000338  2A14               	incf	___awmod@dividend+1,f,c
  1009  00033A                     l369:
  1010  00033A  C013  F013         	movff	___awmod@dividend,?___awmod
  1011  00033E  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  1012  000342  0012               	return	
  1013  000344                     __end_of___awmod:
  1014                           	opt stack 0
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           tblptrl	equ	0xFF6
  1018                           tablat	equ	0xFF5
  1019                           prodh	equ	0xFF4
  1020                           prodl	equ	0xFF3
  1021                           intcon	equ	0xFF2
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           postdec1	equ	0xFE5
  1025                           fsr1l	equ	0xFE1
  1026                           indf2	equ	0xFDF
  1027                           fsr2h	equ	0xFDA
  1028                           fsr2l	equ	0xFD9
  1029                           status	equ	0xFD8
  1030                           
  1031 ;; *************** function ___awdiv *****************
  1032 ;; Defined at:
  1033 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  dividend        2   24[COMRAM] int 
  1036 ;;  divisor         2   26[COMRAM] int 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  quotient        2   30[COMRAM] int 
  1039 ;;  sign            1   29[COMRAM] unsigned char 
  1040 ;;  counter         1   28[COMRAM] unsigned char 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2   24[COMRAM] int 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;Total ram usage:        8 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    3
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_calculate_output
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text6
  1065  000250                     __ptext6:
  1066                           	opt stack 0
  1067  000250                     ___awdiv:
  1068                           	opt stack 26
  1069                           
  1070                           ;incstack = 0
  1071  000250  0E00               	movlw	0
  1072  000252  6E1E               	movwf	___awdiv@sign,c
  1073  000254  AE1C               	btfss	___awdiv@divisor+1,7,c
  1074  000256  D006               	goto	l347
  1075  000258  6C1B               	negf	___awdiv@divisor,c
  1076  00025A  1E1C               	comf	___awdiv@divisor+1,f,c
  1077  00025C  B0D8               	btfsc	status,0,c
  1078  00025E  2A1C               	incf	___awdiv@divisor+1,f,c
  1079  000260  0E01               	movlw	1
  1080  000262  6E1E               	movwf	___awdiv@sign,c
  1081  000264                     l347:
  1082  000264  AE1A               	btfss	___awdiv@dividend+1,7,c
  1083  000266  D006               	goto	l348
  1084  000268  6C19               	negf	___awdiv@dividend,c
  1085  00026A  1E1A               	comf	___awdiv@dividend+1,f,c
  1086  00026C  B0D8               	btfsc	status,0,c
  1087  00026E  2A1A               	incf	___awdiv@dividend+1,f,c
  1088  000270  0E01               	movlw	1
  1089  000272  1A1E               	xorwf	___awdiv@sign,f,c
  1090  000274                     l348:
  1091  000274  0E00               	movlw	0
  1092  000276  6E20               	movwf	___awdiv@quotient+1,c
  1093  000278  0E00               	movlw	0
  1094  00027A  6E1F               	movwf	___awdiv@quotient,c
  1095  00027C  501B               	movf	___awdiv@divisor,w,c
  1096  00027E  101C               	iorwf	___awdiv@divisor+1,w,c
  1097  000280  B4D8               	btfsc	status,2,c
  1098  000282  D01C               	goto	l355
  1099  000284  0E01               	movlw	1
  1100  000286  6E1D               	movwf	___awdiv@counter,c
  1101  000288  D004               	goto	l350
  1102  00028A  90D8               	bcf	status,0,c
  1103  00028C  361B               	rlcf	___awdiv@divisor,f,c
  1104  00028E  361C               	rlcf	___awdiv@divisor+1,f,c
  1105  000290  2A1D               	incf	___awdiv@counter,f,c
  1106  000292                     l350:
  1107  000292  AE1C               	btfss	___awdiv@divisor+1,7,c
  1108  000294  D7FA               	goto	l351
  1109  000296                     u270:
  1110  000296  90D8               	bcf	status,0,c
  1111  000298  361F               	rlcf	___awdiv@quotient,f,c
  1112  00029A  3620               	rlcf	___awdiv@quotient+1,f,c
  1113  00029C  501B               	movf	___awdiv@divisor,w,c
  1114  00029E  5C19               	subwf	___awdiv@dividend,w,c
  1115  0002A0  501C               	movf	___awdiv@divisor+1,w,c
  1116  0002A2  581A               	subwfb	___awdiv@dividend+1,w,c
  1117  0002A4  A0D8               	btfss	status,0,c
  1118  0002A6  D005               	goto	l354
  1119  0002A8  501B               	movf	___awdiv@divisor,w,c
  1120  0002AA  5E19               	subwf	___awdiv@dividend,f,c
  1121  0002AC  501C               	movf	___awdiv@divisor+1,w,c
  1122  0002AE  5A1A               	subwfb	___awdiv@dividend+1,f,c
  1123  0002B0  801F               	bsf	___awdiv@quotient,0,c
  1124  0002B2                     l354:
  1125  0002B2  90D8               	bcf	status,0,c
  1126  0002B4  321C               	rrcf	___awdiv@divisor+1,f,c
  1127  0002B6  321B               	rrcf	___awdiv@divisor,f,c
  1128  0002B8  2E1D               	decfsz	___awdiv@counter,f,c
  1129  0002BA  D7ED               	goto	u270
  1130  0002BC                     l355:
  1131  0002BC  501E               	movf	___awdiv@sign,w,c
  1132  0002BE  B4D8               	btfsc	status,2,c
  1133  0002C0  D004               	goto	l356
  1134  0002C2  6C1F               	negf	___awdiv@quotient,c
  1135  0002C4  1E20               	comf	___awdiv@quotient+1,f,c
  1136  0002C6  B0D8               	btfsc	status,0,c
  1137  0002C8  2A20               	incf	___awdiv@quotient+1,f,c
  1138  0002CA                     l356:
  1139  0002CA  C01F  F019         	movff	___awdiv@quotient,?___awdiv
  1140  0002CE  C020  F01A         	movff	___awdiv@quotient+1,?___awdiv+1
  1141  0002D2  0012               	return	
  1142  0002D4                     __end_of___awdiv:
  1143                           	opt stack 0
  1144                           tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           tblptrl	equ	0xFF6
  1147                           tablat	equ	0xFF5
  1148                           prodh	equ	0xFF4
  1149                           prodl	equ	0xFF3
  1150                           intcon	equ	0xFF2
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postdec1	equ	0xFE5
  1154                           fsr1l	equ	0xFE1
  1155                           indf2	equ	0xFDF
  1156                           fsr2h	equ	0xFDA
  1157                           fsr2l	equ	0xFD9
  1158                           status	equ	0xFD8
  1159                           
  1160 ;; *************** function _SYSTEM_Initialize *****************
  1161 ;; Defined at:
  1162 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    5
  1183 ;; This function calls:
  1184 ;;		_INTERRUPT_Initialize
  1185 ;;		_OSCILLATOR_Initialize
  1186 ;;		_PIN_MANAGER_Initialize
  1187 ;;		_TMR0_Initialize
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text7
  1194  000430                     __ptext7:
  1195                           	opt stack 0
  1196  000430                     _SYSTEM_Initialize:
  1197                           	opt stack 25
  1198                           
  1199                           ;mcc.c: 53: INTERRUPT_Initialize();
  1200                           
  1201                           ;incstack = 0
  1202  000430  EC43  F002         	call	_INTERRUPT_Initialize	;wreg free
  1203                           
  1204                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1205  000434  ECA2  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1206                           
  1207                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1208  000438  EC37  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1209                           
  1210                           ;mcc.c: 56: TMR0_Initialize();
  1211  00043C  EC07  F002         	call	_TMR0_Initialize	;wreg free
  1212  000440  0012               	return		;funcret
  1213  000442                     __end_of_SYSTEM_Initialize:
  1214                           	opt stack 0
  1215                           tblptru	equ	0xFF8
  1216                           tblptrh	equ	0xFF7
  1217                           tblptrl	equ	0xFF6
  1218                           tablat	equ	0xFF5
  1219                           prodh	equ	0xFF4
  1220                           prodl	equ	0xFF3
  1221                           intcon	equ	0xFF2
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1l	equ	0xFE1
  1226                           indf2	equ	0xFDF
  1227                           fsr2h	equ	0xFDA
  1228                           fsr2l	equ	0xFD9
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _TMR0_Initialize *****************
  1232 ;; Defined at:
  1233 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    4
  1254 ;; This function calls:
  1255 ;;		_TMR0_SetInterruptHandler
  1256 ;; This function is called by:
  1257 ;;		_SYSTEM_Initialize
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text8
  1262  00040E                     __ptext8:
  1263                           	opt stack 0
  1264  00040E                     _TMR0_Initialize:
  1265                           	opt stack 25
  1266                           
  1267                           ;tmr0.c: 72: TMR0H = 0x00;
  1268                           
  1269                           ;incstack = 0
  1270  00040E  0E00               	movlw	0
  1271  000410  6ED7               	movwf	4055,c	;volatile
  1272                           
  1273                           ;tmr0.c: 75: TMR0L = 0x06;
  1274  000412  0E06               	movlw	6
  1275  000414  6ED6               	movwf	4054,c	;volatile
  1276                           
  1277                           ;tmr0.c: 79: timer0ReloadVal = 6;
  1278  000416  0E06               	movlw	6
  1279  000418  6E41               	movwf	_timer0ReloadVal,c	;volatile
  1280                           
  1281                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
  1282  00041A  94F2               	bcf	intcon,2,c	;volatile
  1283                           
  1284                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
  1285  00041C  8AF2               	bsf	intcon,5,c	;volatile
  1286                           
  1287                           ;tmr0.c: 88: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1288  00041E  0E8A               	movlw	low _TMR0_DefaultInterruptHandler
  1289  000420  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1290  000422  0E04               	movlw	high _TMR0_DefaultInterruptHandler
  1291  000424  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1292  000426  EC3E  F002         	call	_TMR0_SetInterruptHandler	;wreg free
  1293                           
  1294                           ;tmr0.c: 91: T0CON = 0xD0;
  1295  00042A  0ED0               	movlw	208
  1296  00042C  6ED5               	movwf	4053,c	;volatile
  1297  00042E  0012               	return		;funcret
  1298  000430                     __end_of_TMR0_Initialize:
  1299                           	opt stack 0
  1300                           tblptru	equ	0xFF8
  1301                           tblptrh	equ	0xFF7
  1302                           tblptrl	equ	0xFF6
  1303                           tablat	equ	0xFF5
  1304                           prodh	equ	0xFF4
  1305                           prodl	equ	0xFF3
  1306                           intcon	equ	0xFF2
  1307                           postinc0	equ	0xFEE
  1308                           wreg	equ	0xFE8
  1309                           postdec1	equ	0xFE5
  1310                           fsr1l	equ	0xFE1
  1311                           indf2	equ	0xFDF
  1312                           fsr2h	equ	0xFDA
  1313                           fsr2l	equ	0xFD9
  1314                           status	equ	0xFD8
  1315                           
  1316 ;; *************** function _TMR0_SetInterruptHandler *****************
  1317 ;; Defined at:
  1318 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  1321 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;Total ram usage:        2 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    3
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_TMR0_Initialize
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text9
  1348  00047C                     __ptext9:
  1349                           	opt stack 0
  1350  00047C                     _TMR0_SetInterruptHandler:
  1351                           	opt stack 25
  1352                           
  1353                           ;tmr0.c: 149: TMR0_InterruptHandler = InterruptHandler;
  1354                           
  1355                           ;incstack = 0
  1356  00047C  C013  F03F         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1357  000480  C014  F040         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1358  000484  0012               	return		;funcret
  1359  000486                     __end_of_TMR0_SetInterruptHandler:
  1360                           	opt stack 0
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           prodh	equ	0xFF4
  1366                           prodl	equ	0xFF3
  1367                           intcon	equ	0xFF2
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           postdec1	equ	0xFE5
  1371                           fsr1l	equ	0xFE1
  1372                           indf2	equ	0xFDF
  1373                           fsr2h	equ	0xFDA
  1374                           fsr2l	equ	0xFD9
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _PIN_MANAGER_Initialize *****************
  1378 ;; Defined at:
  1379 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_SYSTEM_Initialize
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text10
  1408  000344                     __ptext10:
  1409                           	opt stack 0
  1410  000344                     _PIN_MANAGER_Initialize:
  1411                           	opt stack 26
  1412                           
  1413                           ;pin_manager.c: 60: LATE = 0x00;
  1414                           
  1415                           ;incstack = 0
  1416  000344  0E00               	movlw	0
  1417  000346  6E8D               	movwf	3981,c	;volatile
  1418                           
  1419                           ;pin_manager.c: 61: LATD = 0x00;
  1420  000348  0E00               	movlw	0
  1421  00034A  6E8C               	movwf	3980,c	;volatile
  1422                           
  1423                           ;pin_manager.c: 62: LATA = 0x00;
  1424  00034C  0E00               	movlw	0
  1425  00034E  6E89               	movwf	3977,c	;volatile
  1426                           
  1427                           ;pin_manager.c: 63: LATB = 0x00;
  1428  000350  0E00               	movlw	0
  1429  000352  6E8A               	movwf	3978,c	;volatile
  1430                           
  1431                           ;pin_manager.c: 64: LATC = 0x00;
  1432  000354  0E00               	movlw	0
  1433  000356  6E8B               	movwf	3979,c	;volatile
  1434                           
  1435                           ;pin_manager.c: 69: TRISE = 0x07;
  1436  000358  0E07               	movlw	7
  1437  00035A  6E96               	movwf	3990,c	;volatile
  1438                           
  1439                           ;pin_manager.c: 70: TRISA = 0x00;
  1440  00035C  0E00               	movlw	0
  1441  00035E  6E92               	movwf	3986,c	;volatile
  1442                           
  1443                           ;pin_manager.c: 71: TRISB = 0xF0;
  1444  000360  0EF0               	movlw	240
  1445  000362  6E93               	movwf	3987,c	;volatile
  1446                           
  1447                           ;pin_manager.c: 72: TRISC = 0xFF;
  1448  000364  6894               	setf	3988,c	;volatile
  1449                           
  1450                           ;pin_manager.c: 73: TRISD = 0xFF;
  1451  000366  6895               	setf	3989,c	;volatile
  1452                           
  1453                           ;pin_manager.c: 78: ANSELD = 0xFF;
  1454  000368  010F               	movlb	15	; () banked
  1455  00036A  693B               	setf	59,b	;volatile
  1456                           
  1457                           ;pin_manager.c: 79: ANSELC = 0xFC;
  1458  00036C  0EFC               	movlw	252
  1459  00036E  6F3A               	movwf	58,b	;volatile
  1460                           
  1461                           ;pin_manager.c: 80: ANSELB = 0x3F;
  1462  000370  0E3F               	movlw	63
  1463  000372  6F39               	movwf	57,b	;volatile
  1464                           
  1465                           ;pin_manager.c: 81: ANSELE = 0x07;
  1466  000374  0E07               	movlw	7
  1467  000376  6F3C               	movwf	60,b	;volatile
  1468                           
  1469                           ;pin_manager.c: 82: ANSELA = 0x2F;
  1470  000378  0E2F               	movlw	47
  1471  00037A  6F38               	movwf	56,b	;volatile
  1472                           
  1473                           ;pin_manager.c: 87: WPUB = 0x00;
  1474  00037C  0E00               	movlw	0
  1475  00037E  6E61               	movwf	3937,c	;volatile
  1476                           
  1477                           ; BSR set to: 15
  1478                           ;pin_manager.c: 88: INTCON2bits.nRBPU = 1;
  1479  000380  8EF1               	bsf	intcon2,7,c	;volatile
  1480                           
  1481                           ; BSR set to: 15
  1482  000382  0012               	return		;funcret
  1483  000384                     __end_of_PIN_MANAGER_Initialize:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           prodh	equ	0xFF4
  1490                           prodl	equ	0xFF3
  1491                           intcon	equ	0xFF2
  1492                           intcon2	equ	0xFF1
  1493                           postinc0	equ	0xFEE
  1494                           wreg	equ	0xFE8
  1495                           postdec1	equ	0xFE5
  1496                           fsr1l	equ	0xFE1
  1497                           indf2	equ	0xFDF
  1498                           fsr2h	equ	0xFDA
  1499                           fsr2l	equ	0xFD9
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _OSCILLATOR_Initialize *****************
  1503 ;; Defined at:
  1504 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    3
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_SYSTEM_Initialize
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text11
  1533  00046E                     __ptext11:
  1534                           	opt stack 0
  1535  00046E                     _OSCILLATOR_Initialize:
  1536                           	opt stack 26
  1537                           
  1538                           ;mcc.c: 62: OSCCON = 0x40;
  1539                           
  1540                           ; BSR set to: 15
  1541                           ;incstack = 0
  1542  00046E  0E40               	movlw	64
  1543  000470  6ED3               	movwf	4051,c	;volatile
  1544                           
  1545                           ;mcc.c: 64: OSCCON2 = 0x04;
  1546  000472  0E04               	movlw	4
  1547  000474  6ED2               	movwf	4050,c	;volatile
  1548                           
  1549                           ;mcc.c: 66: OSCTUNE = 0x80;
  1550  000476  0E80               	movlw	128
  1551  000478  6E9B               	movwf	3995,c	;volatile
  1552  00047A  0012               	return		;funcret
  1553  00047C                     __end_of_OSCILLATOR_Initialize:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodh	equ	0xFF4
  1560                           prodl	equ	0xFF3
  1561                           intcon	equ	0xFF2
  1562                           intcon2	equ	0xFF1
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           postdec1	equ	0xFE5
  1566                           fsr1l	equ	0xFE1
  1567                           indf2	equ	0xFDF
  1568                           fsr2h	equ	0xFDA
  1569                           fsr2l	equ	0xFD9
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function _INTERRUPT_Initialize *****************
  1573 ;; Defined at:
  1574 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		None
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    3
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_SYSTEM_Initialize
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text12
  1603  000486                     __ptext12:
  1604                           	opt stack 0
  1605  000486                     _INTERRUPT_Initialize:
  1606                           	opt stack 26
  1607                           
  1608                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1609                           
  1610                           ;incstack = 0
  1611  000486  9ED0               	bcf	4048,7,c	;volatile
  1612  000488  0012               	return		;funcret
  1613  00048A                     __end_of_INTERRUPT_Initialize:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           prodh	equ	0xFF4
  1620                           prodl	equ	0xFF3
  1621                           intcon	equ	0xFF2
  1622                           intcon2	equ	0xFF1
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           postdec1	equ	0xFE5
  1626                           fsr1l	equ	0xFE1
  1627                           indf2	equ	0xFDF
  1628                           fsr2h	equ	0xFDA
  1629                           fsr2l	equ	0xFD9
  1630                           status	equ	0xFD8
  1631                           
  1632 ;; *************** function _INTERRUPT_InterruptManager *****************
  1633 ;; Defined at:
  1634 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;Total ram usage:       18 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    2
  1655 ;; This function calls:
  1656 ;;		_TMR0_ISR
  1657 ;; This function is called by:
  1658 ;;		Interrupt level 2
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	intcode
  1663  000008                     __pintcode:
  1664                           	opt stack 0
  1665  000008                     _INTERRUPT_InterruptManager:
  1666                           	opt stack 25
  1667                           
  1668                           ;incstack = 0
  1669  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1670  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1671  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1672  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1673  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1674  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1675  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1676  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1677  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1678  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1679  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1680  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1681  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1682  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1683  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1684  000042  C042  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1685  000046  C043  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1686  00004A  C044  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1687  00004E  C045  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1688                           
  1689                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1690  000052  BAF2               	btfsc	intcon,5,c	;volatile
  1691  000054  A4F2               	btfss	intcon,2,c	;volatile
  1692  000056  D002               	goto	i2l62
  1693                           
  1694                           ;interrupt_manager.c: 62: {
  1695                           ;interrupt_manager.c: 63: TMR0_ISR();
  1696  000058  ECDF  F001         	call	_TMR0_ISR	;wreg free
  1697  00005C                     i2l62:
  1698                           
  1699                           ;interrupt_manager.c: 65: else
  1700                           ;interrupt_manager.c: 66: {
  1701  00005C  C012  F045         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1702  000060  C011  F044         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1703  000064  C010  F043         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1704  000068  C00F  F042         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1705  00006C  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1706  000070  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1707  000074  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1708  000078  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1709  00007C  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1710  000080  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1711  000084  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1712  000088  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1713  00008C  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1714  000090  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1715  000094  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1716  000098  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1717  00009C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1718  0000A0  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1719  0000A4  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1720  0000A6  0011               	retfie		f
  1721  0000A8                     __end_of_INTERRUPT_InterruptManager:
  1722                           	opt stack 0
  1723                           pclatu	equ	0xFFB
  1724                           pclath	equ	0xFFA
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           prodh	equ	0xFF4
  1730                           prodl	equ	0xFF3
  1731                           intcon	equ	0xFF2
  1732                           intcon2	equ	0xFF1
  1733                           postinc0	equ	0xFEE
  1734                           fsr0h	equ	0xFEA
  1735                           fsr0l	equ	0xFE9
  1736                           wreg	equ	0xFE8
  1737                           postdec1	equ	0xFE5
  1738                           fsr1h	equ	0xFE2
  1739                           fsr1l	equ	0xFE1
  1740                           indf2	equ	0xFDF
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _TMR0_ISR *****************
  1746 ;; Defined at:
  1747 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    1
  1768 ;; This function calls:
  1769 ;;		Absolute function
  1770 ;;		_TMR0_DefaultInterruptHandler
  1771 ;; This function is called by:
  1772 ;;		_INTERRUPT_InterruptManager
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text14
  1777  0003BE                     __ptext14:
  1778                           	opt stack 0
  1779  0003BE                     _TMR0_ISR:
  1780                           	opt stack 25
  1781                           
  1782                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
  1783                           
  1784                           ;incstack = 0
  1785  0003BE  94F2               	bcf	intcon,2,c	;volatile
  1786                           
  1787                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
  1788  0003C0  C041  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1789                           
  1790                           ;tmr0.c: 138: if(TMR0_InterruptHandler)
  1791  0003C4  503F               	movf	_TMR0_InterruptHandler,w,c
  1792  0003C6  1040               	iorwf	_TMR0_InterruptHandler+1,w,c
  1793  0003C8  B4D8               	btfsc	status,2,c
  1794  0003CA  D00C               	goto	i2u37_49
  1795                           
  1796                           ;tmr0.c: 139: {
  1797                           ;tmr0.c: 140: TMR0_InterruptHandler();
  1798  0003CC  D801               	call	i2u37_48
  1799  0003CE  D00A               	goto	i2u37_49
  1800  0003D0                     i2u37_48:
  1801  0003D0  0005               	push	
  1802  0003D2  6EFA               	movwf	pclath,c
  1803  0003D4  503F               	movf	_TMR0_InterruptHandler,w,c
  1804  0003D6  6EFD               	movwf	tosl,c
  1805  0003D8  5040               	movf	_TMR0_InterruptHandler+1,w,c
  1806  0003DA  6EFE               	movwf	tosh,c
  1807  0003DC  50F8               	movf	tblptru,w,c
  1808  0003DE  6EFF               	movwf	tosu,c
  1809  0003E0  50FA               	movf	pclath,w,c
  1810  0003E2  0012               	return		;indir
  1811  0003E4                     i2u37_49:
  1812                           
  1813                           ;tmr0.c: 141: }
  1814                           ;tmr0.c: 144: scan_cnt++;
  1815  0003E4  2A30               	incf	_scan_cnt,f,c	;volatile
  1816  0003E6  0012               	return		;funcret
  1817  0003E8                     __end_of_TMR0_ISR:
  1818                           	opt stack 0
  1819                           tosu	equ	0xFFF
  1820                           tosh	equ	0xFFE
  1821                           tosl	equ	0xFFD
  1822                           pclatu	equ	0xFFB
  1823                           pclath	equ	0xFFA
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           prodh	equ	0xFF4
  1829                           prodl	equ	0xFF3
  1830                           intcon	equ	0xFF2
  1831                           intcon2	equ	0xFF1
  1832                           postinc0	equ	0xFEE
  1833                           fsr0h	equ	0xFEA
  1834                           fsr0l	equ	0xFE9
  1835                           wreg	equ	0xFE8
  1836                           postdec1	equ	0xFE5
  1837                           fsr1h	equ	0xFE2
  1838                           fsr1l	equ	0xFE1
  1839                           indf2	equ	0xFDF
  1840                           fsr2h	equ	0xFDA
  1841                           fsr2l	equ	0xFD9
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1845 ;; Defined at:
  1846 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		None
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_TMR0_Initialize
  1870 ;;		_TMR0_ISR
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text15
  1875  00048A                     __ptext15:
  1876                           	opt stack 0
  1877  00048A                     _TMR0_DefaultInterruptHandler:
  1878                           	opt stack 25
  1879                           
  1880                           ;incstack = 0
  1881  00048A  0012               	return		;funcret
  1882  00048C                     __end_of_TMR0_DefaultInterruptHandler:
  1883                           	opt stack 0
  1884  0000                     tosu	equ	0xFFF
  1885                           tosh	equ	0xFFE
  1886                           tosl	equ	0xFFD
  1887                           pclatu	equ	0xFFB
  1888                           pclath	equ	0xFFA
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           prodh	equ	0xFF4
  1894                           prodl	equ	0xFF3
  1895                           intcon	equ	0xFF2
  1896                           intcon2	equ	0xFF1
  1897                           postinc0	equ	0xFEE
  1898                           fsr0h	equ	0xFEA
  1899                           fsr0l	equ	0xFE9
  1900                           wreg	equ	0xFE8
  1901                           postdec1	equ	0xFE5
  1902                           fsr1h	equ	0xFE2
  1903                           fsr1l	equ	0xFE1
  1904                           indf2	equ	0xFDF
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8
  1908                           tosu	equ	0xFFF
  1909                           tosh	equ	0xFFE
  1910                           tosl	equ	0xFFD
  1911                           pclatu	equ	0xFFB
  1912                           pclath	equ	0xFFA
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           prodh	equ	0xFF4
  1918                           prodl	equ	0xFF3
  1919                           intcon	equ	0xFF2
  1920                           intcon2	equ	0xFF1
  1921                           postinc0	equ	0xFEE
  1922                           fsr0h	equ	0xFEA
  1923                           fsr0l	equ	0xFE9
  1924                           wreg	equ	0xFE8
  1925                           postdec1	equ	0xFE5
  1926                           fsr1h	equ	0xFE2
  1927                           fsr1l	equ	0xFE1
  1928                           indf2	equ	0xFDF
  1929                           fsr2h	equ	0xFDA
  1930                           fsr2l	equ	0xFD9
  1931                           status	equ	0xFD8
  1932                           
  1933                           	psect	text16
  1934  000000                     __ptext16:
  1935                           	opt stack 0
  1936                           tosu	equ	0xFFF
  1937                           tosh	equ	0xFFE
  1938                           tosl	equ	0xFFD
  1939                           pclatu	equ	0xFFB
  1940                           pclath	equ	0xFFA
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           intcon	equ	0xFF2
  1948                           intcon2	equ	0xFF1
  1949                           postinc0	equ	0xFEE
  1950                           fsr0h	equ	0xFEA
  1951                           fsr0l	equ	0xFE9
  1952                           wreg	equ	0xFE8
  1953                           postdec1	equ	0xFE5
  1954                           fsr1h	equ	0xFE2
  1955                           fsr1l	equ	0xFE1
  1956                           indf2	equ	0xFDF
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961                           	psect	rparam
  1962  0000                     tosu	equ	0xFFF
  1963                           tosh	equ	0xFFE
  1964                           tosl	equ	0xFFD
  1965                           pclatu	equ	0xFFB
  1966                           pclath	equ	0xFFA
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           prodh	equ	0xFF4
  1972                           prodl	equ	0xFF3
  1973                           intcon	equ	0xFF2
  1974                           intcon2	equ	0xFF1
  1975                           postinc0	equ	0xFEE
  1976                           fsr0h	equ	0xFEA
  1977                           fsr0l	equ	0xFE9
  1978                           wreg	equ	0xFE8
  1979                           postdec1	equ	0xFE5
  1980                           fsr1h	equ	0xFE2
  1981                           fsr1l	equ	0xFE1
  1982                           indf2	equ	0xFDF
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           
  1987                           	psect	temp
  1988  000042                     btemp:
  1989                           	opt stack 0
  1990  000042                     	ds	1
  1991  0000                     int$flags	set	btemp
  1992  0000                     wtemp6	set	btemp+1
  1993                           tosu	equ	0xFFF
  1994                           tosh	equ	0xFFE
  1995                           tosl	equ	0xFFD
  1996                           pclatu	equ	0xFFB
  1997                           pclath	equ	0xFFA
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           prodh	equ	0xFF4
  2003                           prodl	equ	0xFF3
  2004                           intcon	equ	0xFF2
  2005                           intcon2	equ	0xFF1
  2006                           postinc0	equ	0xFEE
  2007                           fsr0h	equ	0xFEA
  2008                           fsr0l	equ	0xFE9
  2009                           wreg	equ	0xFE8
  2010                           postdec1	equ	0xFE5
  2011                           fsr1h	equ	0xFE2
  2012                           fsr1l	equ	0xFE1
  2013                           indf2	equ	0xFDF
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         16
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      65
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _calculate_output->___awdiv
    _display_7seg->_Delay1KTCYx
    ___awdiv->___wmul
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1840
                  _SYSTEM_Initialize
                   _calculate_output
 ---------------------------------------------------------------------------------
 (1) _calculate_output                                     0     0      0    1742
                            ___awdiv
                            ___awmod
                             ___wmul
                       _display_7seg
 ---------------------------------------------------------------------------------
 (2) _display_7seg                                         1     1      0      75
                                             19 COMRAM     1     1      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                             24 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _calculate_output
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___wmul
     _display_7seg
       _Delay1KTCYx

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      41       1       69.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      12        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Sep 18 12:36:02 2019

                                       _i 002B                                         _j 002E  
                                       _k 0029                              ___awdiv@sign 001E  
                     ___wmul@multiplicand 0015                             ?_display_7seg 0001  
                         _timer0ReloadVal 0041                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l145 0468                                       l170 01F0  
                                     l171 021E                                       l350 0292  
                                     l351 028A                                       l360 02E8  
                                     l176 016C                                       l361 02F4  
                                     l169 01C4                                       l354 02B2  
                                     l355 02BC                                       l347 0264  
                                     l363 030A                                       l356 02CA  
                                     l348 0274                                       l364 0302  
                                     l381 0444                                       l367 0322  
                                     l368 032C                                       l369 033A  
                            __CFG_CPB$OFF 000000                                       u330 030E  
                                     u270 0296                              __CFG_CPD$OFF 000000  
                                     u437 0446                                       u390 0178  
                                     _num 002D                              ___awmod@sign 0018  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8                                      l1160 015C  
                                    l1170 0178                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    i2l62 005C                                      _WPUB 000F61  
                                    _Seg7 0031                                      _main 0460  
                                    _show 003B                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A8                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 0430  
                          ??_display_7seg 0014                               _Delay1KTCYx 0442  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 047C                                     ?_main 0001  
                         __end_of___awdiv 02D4                           __end_of___awmod 0344  
                                   _T0CON 000FD5                           ___awdiv@divisor 001B  
                          __CFG_DEBUG$OFF 000000                           ___awdiv@counter 001D  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0013  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 03E8                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 0043  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 0384                              __end_of_main 046E  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0021  
                           __activetblptr 000002                          ___awdiv@dividend 0019  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                         ?_calculate_output 0001  
                      ??_calculate_output 0021                            __CFG_XINST$OFF 000000  
                                  ___wmul 03E8                                 ??___awdiv 001D  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0017  
                        ?_TMR0_Initialize 0001                                    clear_0 03AA  
                        ___awdiv@quotient 001F                           ___awmod@divisor 0015  
                         ___awmod@counter 0017                              __pdataCOMRAM 0031  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8  TMR0_SetInterruptHandler@InterruptHandler 0013  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 0430  
                    __end_of_display_7seg 0250                                __accesstop 0060  
                 __end_of__initialization 03B0                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0015                                 ?_TMR0_ISR 0001  
               __end_of_SYSTEM_Initialize 0442                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 003F                        __CFG_CCP2MX$PORTC1 000000  
        __end_of_TMR0_SetInterruptHandler 0486                                   ?___wmul 0013  
                              ??_TMR0_ISR 0001                        __CFG_CCP3MX$PORTB5 000000  
                            ?_Delay1KTCYx 0001                                   _OSCCON2 000FD2  
                                 i2u37_48 03D0                                   i2u37_49 03E4  
                                 _OSCTUNE 000F9B                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___awdiv 0250                                   ___awmod 02D4  
                         __size_of___wmul 0026                                   __pcinit 0384  
                                 __ramtop 1000                                   __ptext0 0460  
                                 __ptext1 00AC                                   __ptext2 0196  
                                 __ptext3 0442                                   __ptext4 03E8  
                                 __ptext5 02D4                                   __ptext6 0250  
                                 __ptext7 0430                                   __ptext8 040E  
                                 __ptext9 047C                                 _T0CONbits 000FD5  
                   _OSCILLATOR_Initialize 046E                          ___awmod@dividend 0013  
                ??_PIN_MANAGER_Initialize 0013                     __size_of_display_7seg 00BA  
              __size_of_SYSTEM_Initialize 0012                      end_of_initialization 03B0  
                           __Lmediumconst 0000                                   postdec1 000FE5  
                                 postinc0 000FEE                 __size_of_calculate_output 00EA  
                            _display_7seg 0196                  _TMR0_SetInterruptHandler 047C  
            __end_of_INTERRUPT_Initialize 048A                            __end_of___wmul 040E  
                           __pidataCOMRAM 0452                         __size_of_TMR0_ISR 002A  
                  ?_OSCILLATOR_Initialize 0001                      __size_of_Delay1KTCYx 0010  
                     start_initialization 0384                  __size_of_TMR0_Initialize 0022  
         __size_of_PIN_MANAGER_Initialize 0040                                  ??___wmul 0017  
                             __pbssCOMRAM 0021                           Delay1KTCYx@unit 0013  
                   _TMR0_InterruptHandler 003F                    _PIN_MANAGER_Initialize 0344  
                               _delay_cnt 002F                                 __pintcode 0008  
                                ?___awdiv 0019                                  ?___awmod 0013  
                        _calculate_output 00AC              ??_INTERRUPT_InterruptManager 0001  
                        __CFG_PRICLKEN$ON 000000                      _INTERRUPT_Initialize 0486  
                       ??_TMR0_Initialize 0015                            ___wmul@product 0017  
     __size_of_INTERRUPT_InterruptManager 00A0                ??_TMR0_SetInterruptHandler 0015  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 03BE                         ___wmul@multiplier 0013  
                             _INTCON2bits 000FF1                                 copy_data0 0398  
                   ?_INTERRUPT_Initialize 0001                                  __Hrparam 0000  
                                __Lrparam 0000                                  _ShowSeg7 0025  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 0013                          __size_of___awdiv 0084  
                        __size_of___awmod 0070                           display_7seg@num 0014  
                                __ptext10 0344                                  __ptext11 046E  
                                __ptext12 0486                                  __ptext14 03BE  
                                __ptext15 048A                                  __ptext16 0000  
                           __size_of_main 000E                                  _scan_cnt 0030  
    __end_of_TMR0_DefaultInterruptHandler 048C     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 048A                                  int$flags 0042  
                             _seg_display 0021                             ??_Delay1KTCYx 0013  
      __end_of_INTERRUPT_InterruptManager 00A8                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                    ??_INTERRUPT_Initialize 0013  
                                intlevel2 0000                  __end_of_calculate_output 0196  
                 ?_PIN_MANAGER_Initialize 0001             ?_TMR0_DefaultInterruptHandler 0001  
                         _TMR0_Initialize 040E                       __end_of_Delay1KTCYx 0452  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 0384  
                       __CFG_FOSC$INTIO67 000000  
